// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:95134505Yy*@localhost:3306/chebbi"
}

model Products {
  id          Int     @id @default(autoincrement())
  productName String
  description String? @db.Text
  price       Float

  Order      Order[]
  Category   Category?  @relation(fields: [categoryId], references: [id])
  categoryId Int?
  review     Review[]
  bookmark   Bookmark[]
  imageURL   String?    @db.Text

  // Promotion   Promotion? @relation(fields: [promotionId], references: [id])
  // promotionId Int?
  SubCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId Int?
  createdDate   DateTime?    @default(now())
  orderItems    OrderItem[]

}

model user {
  id       Int    @id @default(autoincrement())
  fullName String

  address     String?
  phone       String?
  email       String        @unique
  avatarUrl   String?
  password    String
  bookmark    Bookmark[]
  reclamation Reclamation[]
  review      Review[]
  orders      Order[]
}

model Order {
  id Int @id @default(autoincrement())

  price    Float
  products Products[]
  user     user?      @relation(fields: [userId], references: [id])
  userId   Int?
  phone Int
  address String
  orderItems OrderItem[]

}




model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  order     Order    @relation(fields: [orderId], references: [id])
  product   Products @relation(fields: [productId], references: [id])
}


model Category {
  id   Int    @id @default(autoincrement())
  name String

  products    Products[]
  subcategory SubCategory[]
}

model SubCategory {
  id   Int    @id @default(autoincrement())
  name String

  Category   Category?  @relation(fields: [categoryId], references: [id])
  categoryId Int?
  product    Products[]
}

model Review {
  id      Int    @id @default(autoincrement())
  content String

  Products   Products? @relation(fields: [productsId], references: [id])
  productsId Int?

  user   user? @relation(fields: [userId], references: [id])
  userId Int?
}

model Bookmark {
  id Int @id @default(autoincrement())

  Products   Products? @relation(fields: [productsId], references: [id])
  productsId Int?
  user       user?     @relation(fields: [userId], references: [id])
  userId     Int?
}

model Reclamation {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  status      String

  user   user? @relation(fields: [userId], references: [id])
  userId Int?
}

// model Promotion {
//   id          Int      @id @default(autoincrement())
//   code        String   @unique
//   description String
//   discount    Float
//   startDate   DateTime
//   endDate     DateTime
//   // products    Products[]
// }

model employees {
  id          Int    @id @default(autoincrement())
  Name        String
  mobilephone String
  email       String
}

model clients {
  id          Int    @id @default(autoincrement())
  fullName    String
  mobilephone String
  email       String
  age         String
  adress      String
  password    String
}

model Contact {
  id      Int    @id @default(autoincrement())
  name    String
  email   String
  phone   Int
  message String
}
